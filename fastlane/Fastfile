default_platform(:ios)

before_all do
  ensure_git_status_clean if ENV['CI']
end

desc "Deploy to both stores"
lane :deploy_beta do
  sh "fastlane ios beta"
  sh "fastlane android beta"
end

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do |options|
    if !ENV['CI']
      begin
        Dotenv.load('.env.local')
      rescue
        puts "No .env.local file found, continuing without it"
      end
    end
    
    setup_ci if ENV['CI']
    
    # Remove the cocoapods step for now
    
    # Sync certificates
    match(
      type: "appstore",
      readonly: true,
      app_identifier: "com.scheiermannandre.beatIt"
    )
    
    # Build the app
    build_ios_app(
      workspace: "ios/Runner.xcworkspace",
      scheme: "Runner",
      export_method: "app-store",
      xcargs: "-allowProvisioningUpdates",
      clean: true,
      output_directory: "./build",
      output_name: "Runner.ipa"
    )
    
    # Upload to TestFlight
    api_key = app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_KEY"]
    )
    
    upload_to_testflight(
      api_key: api_key,
      skip_waiting_for_build_processing: true
    )
  end
end

platform :android do
  desc "Deploy to internal track on Play Store"
  lane :beta do |options|
    # Build with Flutter
    Dir.chdir("..") do
      sh("flutter build appbundle --release")
    end

    # Upload to Play Store
    upload_to_play_store(
      track: 'internal',
      release_status: 'draft',
      aab: "../build/app/outputs/bundle/release/app-release.aab",
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true,
      skip_upload_changelogs: true
    )
  end
end